/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package QLTV.GUI;
import MyCustom.MyDateFormat;
import MyCustom.MyDialog;
import MyCustom.XuLyFileExcel;
import QLTV.BUS.ChiTietPhieuMuonTraBUS;
import QLTV.BUS.ChiTietPhieuPhatBUS;
import QLTV.BUS.DocGiaBUS;
import QLTV.BUS.PhieuMuonTraBUS;
import QLTV.BUS.PhieuPhatBUS;
import QLTV.BUS.SachBUS;
import QLTV.DAO.MyConnect;
import QLTV.DTO.ChiTietPhieuMuon;
import QLTV.DTO.ChiTietPhieuPhat;
import QLTV.DTO.DocGia;
import QLTV.DTO.PhieuMuon;
import QLTV.DTO.PhieuPhat;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
/**
 *
 * @author chihi
 */
public class pnQuanLyPhieuGUI extends javax.swing.JPanel {
    DefaultTableModel tableModelMuonTraTK,tableModelMuonEdit,tableModelBackBook,tableModelMDialogEdit,listModelPhieuPhat,tableModelPhieuPhat;
    PhieuMuonTraBUS phieuMuonTraBUS;
    ChiTietPhieuMuonTraBUS chiTietPhieuMuonTraBUS;
    ChiTietPhieuPhatBUS chiTietPhieuPhatBUS;
    PhieuPhatBUS phieuPhatBUS;
    SachBUS sachBUS;
    DocGiaBUS docGiaBUS;
    ArrayList<ChiTietPhieuMuon> listCTPMDialogEdit = new ArrayList<>();
//    //
    ArrayList<ChiTietPhieuMuon> listCTPMEdit = new ArrayList<>();
//    //
    ArrayList<ChiTietPhieuMuon> listCTPMBackBook = new ArrayList<>();
    ArrayList<PhieuMuon> listPMBackBook = new ArrayList<>();
//    //
    ArrayList<String> listTabPhieuMTTK;
    ArrayList<PhieuMuon> listTabPMuonEdit;
    ArrayList<String> listTabDioPMEdit = new ArrayList<>();
    public boolean kt;
    /** Creates new form pnQuanLyPhieuGUI */
    public pnQuanLyPhieuGUI() {
        new MyConnect();
        this.setSize(1750, 790);
        initComponents();
        phieuMuonTraBUS = new PhieuMuonTraBUS();
        tableModelMuonTraTK = (DefaultTableModel) jtbPhieuTK.getModel();
        listModelPhieuPhat = (DefaultTableModel) jtabMaSachPP.getModel();
        showColumnPhieuMTTK();
        loadTablePhieuMuonTraTK(phieuMuonTraBUS.getListMTTK());
        //---------------------------------------------------------------------
        //                      edit sach muon
        //---------------------------------------------------------------------
        sachBUS = new SachBUS();
        docGiaBUS = new DocGiaBUS();
        chiTietPhieuMuonTraBUS = new ChiTietPhieuMuonTraBUS();
        tableModelMuonEdit = (DefaultTableModel) jtabPhieuMuonEdit.getModel();
        tableModelMDialogEdit = (DefaultTableModel) jtabDSDialogEdit.getModel();
        showComboboxTenSachEdit();
        showColumnPhieuMEdit();
        showComboBoxDocGiaEdit();
        loadTablePhieuMuonEdit(phieuMuonTraBUS.getListPMuonTraEdit());
        //-----------------------------------------------------------------------
        //                              taophieuphat dialog - muon
        //-----------------------------------------------------------------------
        chiTietPhieuPhatBUS = new ChiTietPhieuPhatBUS();
        phieuPhatBUS = new PhieuPhatBUS();
        //-----------------------------------------------------------------------
        //                              taophieuphat
        //-----------------------------------------------------------------------
        tableModelPhieuPhat = (DefaultTableModel) jtabPhieuPhat.getModel();
        showColumnPhieuPhat();
        loadTablePhieuPhat();
        showComboboxMaTheMaSach();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdialogDanhSachMuon = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jlblDSSMEdit = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jtfSoLuongDialogEdit = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jtfTienCuocDialogEdit = new javax.swing.JTextField();
        jtbnThoatDialogEdit = new javax.swing.JButton();
        jbtnSuaDialogEdit = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtabDSDialogEdit = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        jcbbTinhTrangDialogEdit = new javax.swing.JComboBox<>();
        jcbbTenSachDialogEdit = new javax.swing.JComboBox<>();
        jbtnThemDialogEdit = new javax.swing.JButton();
        jbtnXoaTrangDialogEdit = new javax.swing.JButton();
        jbtnXoaDialogEdit = new javax.swing.JButton();
        jdialogPhieuPhat = new javax.swing.JDialog();
        jPanel27 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jtfMaDocGiaPPDialog = new javax.swing.JTextField();
        jtfMaPPDialog = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jtfTienPhatPPDialog = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jtxtAreaXuLyPPDialog = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnThoatPP = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jtxtareaLiDoPPDialog = new javax.swing.JTextArea();
        jbtnTaoPhieuPP = new javax.swing.JButton();
        jdataChooserPP = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtabMaSachPP = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jpnlTK = new javax.swing.JPanel();
        jtfTimKiemTK = new javax.swing.JTextField();
        jbtnTimKiem = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jcbbTimKiemT = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        lpnlSapXepTK = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jcbbSapXepTK = new javax.swing.JComboBox<>();
        jbtnXuatFile = new javax.swing.JButton();
        reserDuLieuTK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbPhieuTK = new javax.swing.JTable();
        jpnlDGMuonTK = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jtfSoTienCuocTK = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jtfSoLuongTK = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtareaSachMuonTK = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jtfMaPhieuMuonEdit = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jbtnThemPMEdit = new javax.swing.JButton();
        jdcHanTraEdit = new com.toedter.calendar.JDateChooser();
        jdcNgayMuonEdit = new com.toedter.calendar.JDateChooser();
        jLabel39 = new javax.swing.JLabel();
        jtfMaSachMuonEdit = new javax.swing.JTextField();
        btnListSachEdit = new javax.swing.JButton();
        jbtnXoaPMEdit = new javax.swing.JButton();
        jbtnSuaPMEdit = new javax.swing.JButton();
        jcbbMaThePMEdit = new javax.swing.JComboBox<>();
        jbtnResetVaLoadEdit = new javax.swing.JButton();
        jbtnTaoPPEdit = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jtfMaSachTraEdit = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jtabPhieuMuonEdit = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfMaPP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfTienPhat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaXuLy = new javax.swing.JTextArea();
        datachooserNgayLap = new com.toedter.calendar.JDateChooser();
        jbtnThemPP = new javax.swing.JButton();
        jbtnSuaPP = new javax.swing.JButton();
        jbtnXoaPP = new javax.swing.JButton();
        jcbbMaThePP = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jbtnResetPP = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jcbbMaSachPP = new javax.swing.JComboBox<>();
        jbtnTimKiemPP = new javax.swing.JButton();
        jcbbLyDoPP = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtabPhieuPhat = new javax.swing.JTable();

        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel15.setMinimumSize(new java.awt.Dimension(1000, 410));
        jPanel15.setPreferredSize(new java.awt.Dimension(1002, 410));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlblDSSMEdit.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jlblDSSMEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblDSSMEdit.setText("Danh sách sách mượn");
        jlblDSSMEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel15.add(jlblDSSMEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 910, 47));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel22.setText("Tên sách :");
        jPanel15.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 120, 30));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setText("Số lượng :");
        jPanel15.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 110, 30));

        jtfSoLuongDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel15.add(jtfSoLuongDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 270, 40));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel25.setText("Tiền cược :");
        jPanel15.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 120, 30));

        jtfTienCuocDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel15.add(jtfTienCuocDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 270, 40));

        jtbnThoatDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtbnThoatDialogEdit.setText("Thoát");
        jtbnThoatDialogEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbnThoatDialogEditActionPerformed(evt);
            }
        });
        jPanel15.add(jtbnThoatDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 170, 40));

        jbtnSuaDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnSuaDialogEdit.setText("Sửa");
        jbtnSuaDialogEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSuaDialogEditActionPerformed(evt);
            }
        });
        jPanel15.add(jbtnSuaDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 170, 40));

        jtabDSDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtabDSDialogEdit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Số lượng", "Tiền cược", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtabDSDialogEdit.setRowHeight(35);
        jtabDSDialogEdit.setRowMargin(5);
        jtabDSDialogEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabDSDialogEditMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtabDSDialogEdit);

        jPanel15.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 520, 250));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel26.setText("Tình trạng :");
        jPanel15.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 130, 30));

        jcbbTinhTrangDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbTinhTrangDialogEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa trả", "Đã trả" }));
        jPanel15.add(jcbbTinhTrangDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 270, 35));

        jcbbTenSachDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbTenSachDialogEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jPanel15.add(jcbbTenSachDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 270, 40));

        jbtnThemDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnThemDialogEdit.setText("Thêm");
        jbtnThemDialogEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThemDialogEditActionPerformed(evt);
            }
        });
        jPanel15.add(jbtnThemDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 170, 40));

        jbtnXoaTrangDialogEdit.setIcon(new javax.swing.ImageIcon("C:\\Users\\chihi\\OneDrive\\Documents\\NetBeansProjects\\QuanLyThuVien_1_1\\image\\Refresh-icon.png")); // NOI18N
        jbtnXoaTrangDialogEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaTrangDialogEditActionPerformed(evt);
            }
        });
        jPanel15.add(jbtnXoaTrangDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 40));

        jbtnXoaDialogEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnXoaDialogEdit.setText("Xóa");
        jbtnXoaDialogEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaDialogEditActionPerformed(evt);
            }
        });
        jPanel15.add(jbtnXoaDialogEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, 170, 40));

        javax.swing.GroupLayout jdialogDanhSachMuonLayout = new javax.swing.GroupLayout(jdialogDanhSachMuon.getContentPane());
        jdialogDanhSachMuon.getContentPane().setLayout(jdialogDanhSachMuonLayout);
        jdialogDanhSachMuonLayout.setHorizontalGroup(
            jdialogDanhSachMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdialogDanhSachMuonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jdialogDanhSachMuonLayout.setVerticalGroup(
            jdialogDanhSachMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("Thiết lập phiếu phạt");
        jPanel27.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 970, 51));

        jLabel62.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel62.setText("Mã độc giả :");
        jPanel27.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jtfMaDocGiaPPDialog.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel27.add(jtfMaDocGiaPPDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 284, -1));

        jtfMaPPDialog.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel27.add(jtfMaPPDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 284, -1));

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel63.setText("Mã phiếu phạt :");
        jPanel27.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel64.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel64.setText("Mã sách :");
        jPanel27.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, -1, 30));

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel65.setText("Ngày lập :");
        jPanel27.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jtfTienPhatPPDialog.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel27.add(jtfTienPhatPPDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 80, 284, 50));

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel66.setText("Tiền phạt :");
        jPanel27.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));

        jLabel67.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel67.setText("Lí do :");
        jPanel27.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel68.setText("Xử lý :");
        jPanel27.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, -1, 30));

        jtxtAreaXuLyPPDialog.setColumns(20);
        jtxtAreaXuLyPPDialog.setRows(5);
        jScrollPane16.setViewportView(jtxtAreaXuLyPPDialog);

        jPanel27.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 290, 280, 110));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel27.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 10, 330));

        jbtnThoatPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnThoatPP.setText("Thoát");
        jbtnThoatPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThoatPPActionPerformed(evt);
            }
        });
        jPanel27.add(jbtnThoatPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 430, 150, 50));

        jScrollPane17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jtxtareaLiDoPPDialog.setColumns(20);
        jtxtareaLiDoPPDialog.setRows(5);
        jScrollPane17.setViewportView(jtxtareaLiDoPPDialog);

        jPanel27.add(jScrollPane17, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 280, 90));

        jbtnTaoPhieuPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnTaoPhieuPP.setText("Lưu");
        jbtnTaoPhieuPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTaoPhieuPPActionPerformed(evt);
            }
        });
        jPanel27.add(jbtnTaoPhieuPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, 150, 50));

        jdataChooserPP.setDateFormatString("dd/MM/yyyy");
        jdataChooserPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel27.add(jdataChooserPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 280, 40));

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jtabMaSachPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtabMaSachPP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Lựa chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtabMaSachPP.setRowHeight(30);
        jtabMaSachPP.setRowMargin(5);
        jScrollPane2.setViewportView(jtabMaSachPP);

        jPanel27.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 280, 120));

        javax.swing.GroupLayout jdialogPhieuPhatLayout = new javax.swing.GroupLayout(jdialogPhieuPhat.getContentPane());
        jdialogPhieuPhat.getContentPane().setLayout(jdialogPhieuPhatLayout);
        jdialogPhieuPhatLayout.setHorizontalGroup(
            jdialogPhieuPhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jdialogPhieuPhatLayout.setVerticalGroup(
            jdialogPhieuPhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnlTK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpnlTK.setName("Tìm kiếm"); // NOI18N
        jpnlTK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtfTimKiemTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jpnlTK.add(jtfTimKiemTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 470, -1));

        jbtnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnTimKiem.setIcon(new javax.swing.ImageIcon("C:\\Users\\chihi\\OneDrive\\Documents\\NetBeansProjects\\QuanLyThuVien_1_1_1\\image\\Search.png")); // NOI18N
        jbtnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTimKiemActionPerformed(evt);
            }
        });
        jpnlTK.add(jbtnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 50, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Tìm kiếm :");
        jpnlTK.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 110, 30));

        jcbbTimKiemT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbTimKiemT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã phiếu mượn", "Họ và tên", "Tên sách", "Tình trạng" }));
        jpnlTK.add(jcbbTimKiemT, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 280, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Tìm kiếm theo :");
        jpnlTK.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 180, 30));

        jPanel1.add(jpnlTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 12, 715, 131));

        lpnlSapXepTK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lpnlSapXepTK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Sắp xếp danh sách theo :");
        lpnlSapXepTK.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jcbbSapXepTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbSapXepTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngày mượn", "Ngày trả", "Số lượng", "Tiền cược" }));
        jcbbSapXepTK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbbSapXepTKItemStateChanged(evt);
            }
        });
        lpnlSapXepTK.add(jcbbSapXepTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 320, 39));

        jbtnXuatFile.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnXuatFile.setText("Xuất file");
        jbtnXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXuatFileActionPerformed(evt);
            }
        });
        lpnlSapXepTK.add(jbtnXuatFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 180, 40));

        reserDuLieuTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reserDuLieuTK.setIcon(new javax.swing.ImageIcon("C:\\Users\\chihi\\OneDrive\\Documents\\NetBeansProjects\\QuanLyThuVien_1_1\\image\\Refresh-icon.png")); // NOI18N
        reserDuLieuTK.setText("Xóa trắng");
        reserDuLieuTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserDuLieuTKActionPerformed(evt);
            }
        });
        lpnlSapXepTK.add(reserDuLieuTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 180, 40));

        jPanel1.add(lpnlSapXepTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 156, 715, 120));

        jtbPhieuTK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jtbPhieuTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtbPhieuTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbPhieuTK.setRowHeight(35);
        jtbPhieuTK.setRowMargin(5);
        jtbPhieuTK.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbPhieuTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbPhieuTKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbPhieuTK);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 296, 1515, 430));

        jpnlDGMuonTK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpnlDGMuonTK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Số tiền đặt cọc :");
        jpnlDGMuonTK.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel18.setText("Sách độc giả mượn :");
        jpnlDGMuonTK.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jtfSoTienCuocTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jpnlDGMuonTK.add(jtfSoTienCuocTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 160, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel20.setText("Số lượng :");
        jpnlDGMuonTK.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, -1, 30));

        jtfSoLuongTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jpnlDGMuonTK.add(jtfSoLuongTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 130, -1));

        jtareaSachMuonTK.setColumns(20);
        jtareaSachMuonTK.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jtareaSachMuonTK.setRows(5);
        jScrollPane4.setViewportView(jtareaSachMuonTK);

        jpnlDGMuonTK.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 610, 130));

        jPanel1.add(jpnlDGMuonTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 12, 641, 266));

        jTabbedPane1.addTab("Tìm kiếm phiếu ", jPanel1);

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Phiếu mượn trả sách");
        jLabel34.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel17.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 350, 47));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel35.setText("Mã phiếu mượn :");
        jPanel17.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 200, 30));

        jtfMaPhieuMuonEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel17.add(jtfMaPhieuMuonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 290, 40));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel36.setText("Mã thẻ :");
        jPanel17.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 104, 30));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel37.setText("Ngày mượn :");
        jPanel17.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 150, 30));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel38.setText("Hạn trả :");
        jPanel17.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, 104, 30));

        jbtnThemPMEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnThemPMEdit.setText("Thêm");
        jbtnThemPMEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThemPMEditActionPerformed(evt);
            }
        });
        jPanel17.add(jbtnThemPMEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 190, 50));

        jdcHanTraEdit.setDateFormatString("dd/MM/yyyy");
        jdcHanTraEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel17.add(jdcHanTraEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 290, 40));

        jdcNgayMuonEdit.setDateFormatString("dd/MM/yyyy");
        jdcNgayMuonEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel17.add(jdcNgayMuonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 290, 40));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel39.setText("Sách đã trả :");
        jPanel17.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, 160, 30));

        jtfMaSachMuonEdit.setEditable(false);
        jtfMaSachMuonEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtfMaSachMuonEdit.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPanel17.add(jtfMaSachMuonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, 200, 40));

        btnListSachEdit.setText("List Sách");
        btnListSachEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListSachEditActionPerformed(evt);
            }
        });
        jPanel17.add(btnListSachEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 140, 90, 40));

        jbtnXoaPMEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnXoaPMEdit.setText("Xóa");
        jbtnXoaPMEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaPMEditActionPerformed(evt);
            }
        });
        jPanel17.add(jbtnXoaPMEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, 190, 50));

        jbtnSuaPMEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnSuaPMEdit.setText("Sửa");
        jbtnSuaPMEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSuaPMEditActionPerformed(evt);
            }
        });
        jPanel17.add(jbtnSuaPMEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 190, 50));

        jcbbMaThePMEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbMaThePMEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        jPanel17.add(jcbbMaThePMEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 290, -1));

        jbtnResetVaLoadEdit.setIcon(new javax.swing.ImageIcon("C:\\Users\\chihi\\OneDrive\\Documents\\NetBeansProjects\\QuanLyThuVien_1_1\\image\\Refresh-icon.png")); // NOI18N
        jbtnResetVaLoadEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetVaLoadEditActionPerformed(evt);
            }
        });
        jPanel17.add(jbtnResetVaLoadEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 50, 40));

        jbtnTaoPPEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnTaoPPEdit.setText("Tạo phiếu phạt");
        jbtnTaoPPEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTaoPPEditActionPerformed(evt);
            }
        });
        jPanel17.add(jbtnTaoPPEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, 200, 50));

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel40.setText("Sách còn mượn :");
        jPanel17.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 200, 30));

        jtfMaSachTraEdit.setEditable(false);
        jtfMaSachTraEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtfMaSachTraEdit.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPanel17.add(jtfMaSachTraEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 200, 200, 40));

        jtabPhieuMuonEdit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtabPhieuMuonEdit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtabPhieuMuonEdit.setRowHeight(35);
        jtabPhieuMuonEdit.setRowMargin(5);
        jtabPhieuMuonEdit.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtabPhieuMuonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabPhieuMuonEditMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jtabPhieuMuonEdit);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 1209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Phiếu mượn trả", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Mã phiếu phạt :");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 188, 27));

        tfMaPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel4.add(tfMaPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 260, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Mã thẻ :");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 100, 27));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Ngày lập :");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 120, 27));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Mã sách :");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 120, 27));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Tiền phạt :");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, 130, 27));

        tfTienPhat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel4.add(tfTienPhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, 360, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Lý do :");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 80, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Xử lý :");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 200, 80, 40));

        txtAreaXuLy.setColumns(20);
        txtAreaXuLy.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtAreaXuLy.setRows(5);
        jScrollPane5.setViewportView(txtAreaXuLy);

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 200, 360, 90));

        datachooserNgayLap.setDateFormatString("dd/MM/yyyy");
        datachooserNgayLap.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel4.add(datachooserNgayLap, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 260, 40));

        jbtnThemPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnThemPP.setText("Thêm");
        jbtnThemPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThemPPActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnThemPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 200, 40));

        jbtnSuaPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnSuaPP.setText("Sửa");
        jbtnSuaPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSuaPPActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnSuaPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 200, 40));

        jbtnXoaPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnXoaPP.setText("Xóa ");
        jbtnXoaPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaPPActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnXoaPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, 200, 40));

        jcbbMaThePP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcbbMaThePP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbbMaThePPItemStateChanged(evt);
            }
        });
        jPanel4.add(jcbbMaThePP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 260, 40));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel4.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 20, 240));

        jbtnResetPP.setIcon(new javax.swing.ImageIcon("C:\\Users\\chihi\\OneDrive\\Documents\\NetBeansProjects\\QuanLyThuVien_Update2_0\\image\\Refresh-icon.png")); // NOI18N
        jbtnResetPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetPPActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnResetPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 50, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Thiết lập phiếu phạt");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1130, 48));

        jcbbMaSachPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel4.add(jcbbMaSachPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 260, 40));

        jbtnTimKiemPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbtnTimKiemPP.setText("Tìm kiếm");
        jbtnTimKiemPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTimKiemPPActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnTimKiemPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 350, 200, 40));

        jcbbLyDoPP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel4.add(jcbbLyDoPP, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 140, 360, -1));

        jtabPhieuPhat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtabPhieuPhat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtabPhieuPhat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtabPhieuPhat.setRowHeight(35);
        jtabPhieuPhat.setRowMargin(5);
        jtabPhieuPhat.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtabPhieuPhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabPhieuPhatMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jtabPhieuPhat);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Phiếu phạt", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTimKiemActionPerformed
        // TODO add your handling code here:
        if(jtfTimKiemTK.getText().trim().equals("")){
            new MyDialog("Vui lòng nhập thông tin cần tìm kiếm !!! ",MyDialog.WARNING_DIALOG);
            return;
        }
        ArrayList<String> a = phieuMuonTraBUS.timKiemPhieuMuonTraTK(jcbbTimKiemT.getSelectedItem().toString(), jtfTimKiemTK.getText());
        loadTablePhieuMuonTraTK(a);
    }//GEN-LAST:event_jbtnTimKiemActionPerformed

    private void jcbbSapXepTKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbbSapXepTKItemStateChanged
        // TODO add your handling code here:
        loadTablePhieuMuonTraTK(phieuMuonTraBUS.sapXepPhieuMuonTraTK(jcbbSapXepTK.getSelectedItem().toString()));
    }//GEN-LAST:event_jcbbSapXepTKItemStateChanged

    private void jbtnXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXuatFileActionPerformed
        // TODO add your handling code here:
        XuLyFileExcel xuatFile = new XuLyFileExcel();
        xuatFile.xuatExcel(jtbPhieuTK);
    }//GEN-LAST:event_jbtnXuatFileActionPerformed

    private void reserDuLieuTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserDuLieuTKActionPerformed
        // TODO add your handling code here:
        jtfTimKiemTK.setText("");
        jtareaSachMuonTK.setText("");
        jtfSoLuongTK.setText("");
        jtfSoTienCuocTK.setText("");
        //        jtfMaDocGiaTK.setText("");
        showColumnPhieuMTTK();
        loadTablePhieuMuonTraTK(phieuMuonTraBUS.getListMTTK());
    }//GEN-LAST:event_reserDuLieuTKActionPerformed

    private void jtbPhieuTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbPhieuTKMouseClicked
        // TODO add your handling code here:
        int row = jtbPhieuTK.getSelectedRow();
        String a = tableModelMuonTraTK.getValueAt(row, 2).toString();
        //        jtfMaDocGiaTK.setText(a[0]);
        //
        String maphieu = tableModelMuonTraTK.getValueAt(row, 1).toString().toUpperCase();
        //
        ArrayList<String> str = phieuMuonTraBUS.getListTenSachTK(maphieu);
        String strSach = "Tên độc giả : "+a+"\nNhững sách còn mượn : \n";
        for(String s : str){
            strSach+="\t"+s+"\n";
        }
        jtareaSachMuonTK.setText(strSach);
        //
        ArrayList<String> strSLT = phieuMuonTraBUS.getTienSoLuongTK(maphieu);
        for(String s : strSLT){
            String[] slt = s.split("_");
            jtfSoTienCuocTK.setText(slt[1]);
            jtfSoLuongTK.setText(slt[0]);
        }
    }//GEN-LAST:event_jtbPhieuTKMouseClicked

    private void jbtnThemPMEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThemPMEditActionPerformed
        // TODO add your handling code here:
        if(jtfMaPhieuMuonEdit.getText().equals("")){
            new MyDialog("Bạn chưa xác nhận mã phiếu mượn mới !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jcbbMaThePMEdit.getSelectedItem().toString().equals("")){
            new MyDialog("Bạn chưa xác nhận mã thẻ !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jdcNgayMuonEdit.getDate()==null){
            new MyDialog("Bạn chưa xác nhận ngày mượn!!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jdcHanTraEdit.getDate()==null){
            new MyDialog("Bạn chưa xác nhận ngày trả !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jtfMaSachMuonEdit.getText().equals("")){
            new MyDialog("Bạn chưa xác nhận sách mượn!!!",MyDialog.ERROR_DIALOG);
            return;
        }
        //Tao phieu muon
        String[] maThe = jcbbMaThePMEdit.getSelectedItem().toString().split("\\s");
        boolean kt = phieuMuonTraBUS.themPhieuMuonTra(
            jtfMaPhieuMuonEdit.getText(),
            maThe[0],
            jdcNgayMuonEdit.getDate(),
            jdcHanTraEdit.getDate());
        if(kt){
            new MyDialog("Thêm phiếu mượn thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Thêm phiếu mượn thất bại !!!",MyDialog.ERROR_DIALOG);
        }
        if(listCTPMDialogEdit == null){
            new MyDialog("Phieu Muon Khong co sach muon", MyDialog.WARNING_DIALOG);
            return;
        }else{
            for(ChiTietPhieuMuon ctpm : listCTPMDialogEdit){
                chiTietPhieuMuonTraBUS.themChiTietPhieuMuon(
                    ctpm.getMaPhieuMuon(),
                    ctpm.getMaSach(),
                    ctpm.getSoLuong(),
                    ctpm.getTienCuoc(),
                    ctpm.getTinhTrang());
            }
        }
        loadTablePhieuMuonEdit(phieuMuonTraBUS.getListPMuonTraEdit());
    }//GEN-LAST:event_jbtnThemPMEditActionPerformed

    private void btnListSachEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListSachEditActionPerformed
        // TODO add your handling code here:
        if(jtfMaPhieuMuonEdit.getText().trim().equals("")){
            new MyDialog("Vui lòng xác nhận mã phiếu mượn trước !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        jdialogDanhSachMuon.setSize(1010, 495);
        jlblDSSMEdit.setText("Danh sách mượn sách của : " + jcbbMaThePMEdit.getSelectedItem().toString());
        if(jtfMaPhieuMuonEdit.isEditable()){
            loadTabAddDialogPhieuMuonEdit();
        }else{
            loadTableDialogPhieuMuonEdit(chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(jtfMaPhieuMuonEdit.getText()));
        }

        jdialogDanhSachMuon.setLocationRelativeTo(null);
        jdialogDanhSachMuon.setVisible(true);
    }//GEN-LAST:event_btnListSachEditActionPerformed

    private void jbtnXoaPMEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaPMEditActionPerformed
        // TODO add your handling code here:
        if(jtfMaPhieuMuonEdit.getText().equals("")){
            new MyDialog("Bạn chưa xác nhận mã phiếu để xóa thông tin !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        boolean a = chiTietPhieuMuonTraBUS.xoaChiTietPhieuMuon(jtfMaPhieuMuonEdit.getText().toUpperCase(),"");
        boolean b = phieuMuonTraBUS.xoaPhieuMuonTra(jtfMaPhieuMuonEdit.getText().toUpperCase());
        if(a&&b){
            new MyDialog("Xóa thông tin thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Xóa thông tin thất bại !!!",MyDialog.ERROR_DIALOG);
        }
        loadTablePhieuMuonEdit(phieuMuonTraBUS.getListPMuonTraEdit());
    }//GEN-LAST:event_jbtnXoaPMEditActionPerformed

    private void jbtnSuaPMEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSuaPMEditActionPerformed
        // TODO add your handling code here:
        if(jtfMaPhieuMuonEdit.getText().equals("")){
            new MyDialog("Bạn chưa xác nhận mã phiếu mượn để sửa thông tin !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        //vi la sua nen khong dc chinh lai ma phieu muon

        if(jcbbMaThePMEdit.getSelectedItem().toString().equals("")){
            new MyDialog("Bạn chưa xác nhận mã thẻ !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jdcNgayMuonEdit.getDate()==null){
            new MyDialog("Bạn chưa xác nhận ngày mượn!!!",MyDialog.ERROR_DIALOG);
            return;
        }
        if(jdcHanTraEdit.getDate() == null){
            new MyDialog("Bạn chưa xác nhận ngày trả !!!",MyDialog.ERROR_DIALOG);
            return;
        }
        //Tao phieu muon truoc
        String[] maThe = jcbbMaThePMEdit.getSelectedItem().toString().split("\\s");
        boolean kt = phieuMuonTraBUS.suaPhieuMuonTra(
            jtfMaPhieuMuonEdit.getText(),
            maThe[0],
            jdcNgayMuonEdit.getDate(),
            jdcHanTraEdit.getDate());
        if(kt){
            new MyDialog("Sửa phiếu mượn thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Sửa phiếu mượn thất bại !!!",MyDialog.WARNING_DIALOG);
        }
        loadTablePhieuMuonEdit(phieuMuonTraBUS.getListPMuonTraEdit());
    }//GEN-LAST:event_jbtnSuaPMEditActionPerformed

    private void jbtnResetVaLoadEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetVaLoadEditActionPerformed
        // TODO add your handling code here:
        loadTablePhieuMuonEdit(phieuMuonTraBUS.getListPMuonTraEdit());
        jtfMaPhieuMuonEdit.setText("");
        jcbbMaThePMEdit.setSelectedIndex(0);
        jdcNgayMuonEdit.setDate(null);
        jdcHanTraEdit.setDate(null);
        jtfMaSachMuonEdit.setText("");
        jtfMaPhieuMuonEdit.setEditable(true);
        jtfMaSachTraEdit.setText("");
    }//GEN-LAST:event_jbtnResetVaLoadEditActionPerformed

    private void jbtnTaoPPEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTaoPPEditActionPerformed
        // TODO add your handling code here:

        if(jcbbMaThePMEdit.getSelectedItem()==null || jtfMaSachTraEdit.getText().equals("")){
            new MyDialog("Vui lòng chọn thông tin độc giả và sách đã trả trước khi ấn tạo phiếu phạt!",MyDialog.WARNING_DIALOG);
            return;
        }

        String[] maphieu = jtfMaSachTraEdit.getText().split("\\s");
        String tenDocGia = jcbbMaThePMEdit.getSelectedItem().toString();
        String[] maDG = tenDocGia.split("\\s");
        for(int i = 0; i<maphieu.length;i++){
            if(ktrPhieuPhatTonTai(maDG[0], maphieu[i])){
                new MyDialog("Phiếu phạt cho độc giả "+tenDocGia+" đã tồn tại !!!",MyDialog.WARNING_DIALOG);
                return;
            }
        }
        //
        jdialogPhieuPhat.setSize(1035, 550);
        jdialogPhieuPhat.setLocationRelativeTo(null);
        jdialogPhieuPhat.setVisible(true);
        //
        listModelPhieuPhat.setRowCount(0);
        for(int i = 0; i<maphieu.length;i++){
            listModelPhieuPhat.addRow(new Object[]{
                maphieu[i],false
            });
        }
        jtfMaDocGiaPPDialog.setText(tenDocGia);
        jtfMaDocGiaPPDialog.setEditable(false);
    }//GEN-LAST:event_jbtnTaoPPEditActionPerformed

    private void jtabPhieuMuonEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabPhieuMuonEditMouseClicked
        // TODO add your handling code here:
        jtfMaPhieuMuonEdit.setEditable(false);
        int row = jtabPhieuMuonEdit.getSelectedRow();
        jtfMaPhieuMuonEdit.setText(jtabPhieuMuonEdit.getValueAt(row, 1).toString());
        jcbbMaThePMEdit.setSelectedItem(jtabPhieuMuonEdit.getValueAt(row, 2).toString());
        jdcNgayMuonEdit.setDate(MyDateFormat.getDateToString(jtabPhieuMuonEdit.getValueAt(row, 3).toString()));
        jdcHanTraEdit.setDate(MyDateFormat.getDateToString(jtabPhieuMuonEdit.getValueAt(row, 4).toString()));
        //
        String str = chiTietPhieuMuonTraBUS.getMaSach(jtabPhieuMuonEdit.getValueAt(row, 1).toString(),true);
        jtfMaSachMuonEdit.setText(str);
        jtfMaSachTraEdit.setText(chiTietPhieuMuonTraBUS.getMaSach(jtabPhieuMuonEdit.getValueAt(row, 1).toString(),false));
    }//GEN-LAST:event_jtabPhieuMuonEditMouseClicked

    private void jbtnThemPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThemPPActionPerformed
        // TODO add your handling code here:
        if(!tfMaPP.isEditable()){
            new MyDialog("Bạn đang ở chế độ sửa thông tin!!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(tfMaPP.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin mã phiếu phạt!!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jcbbMaThePP.getSelectedItem().equals("")){
            new MyDialog("Bạn chưa thêm thông tin mã thẻ!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(datachooserNgayLap.getDate()==null){
            new MyDialog("Bạn chưa thêm thông tin ngày tạo phiếu!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jcbbMaSachPP.getSelectedItem().equals("")){
            new MyDialog("Bạn chưa thêm thông tin mã sách phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(tfTienPhat.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin tiền phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jcbbLyDoPP.getSelectedItem().equals("")){
            new MyDialog("Bạn chưa thêm thông tin lý do phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(txtAreaXuLy.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin cách xử lý phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(phieuPhatBUS.themPhieuPhat(tfMaPP.getText(), jcbbMaThePP.getSelectedItem().toString(), datachooserNgayLap.getDate())==false) {
            System.out.println("Them phieu phat loi");
            return;
        }
        System.out.println("Them phieu phat thanh cong");
        //
        boolean kt = chiTietPhieuPhatBUS.themChiTietPhieuPhat(
            tfMaPP.getText(),
            jcbbMaSachPP.getSelectedItem().toString(),
            Integer.parseInt(tfTienPhat.getText()),
            jcbbLyDoPP.getSelectedItem().toString(),
            txtAreaXuLy.getText());
        if(!kt){
            new MyDialog("Thêm phiếu phạt thất bại !",MyDialog.ERROR_DIALOG);
            return;
        }

        new MyDialog("Thêm phiếu phạt thành công !",MyDialog.INFO_DIALOG);
        loadTablePhieuPhat();
    }//GEN-LAST:event_jbtnThemPPActionPerformed

    private void jbtnSuaPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSuaPPActionPerformed
        // TODO add your handling code here:
        if(tfMaPP.isEditable()){
            new MyDialog("Bạn đang ở chế độ thêm thông tin!!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(datachooserNgayLap.getDate()==null){
            new MyDialog("Bạn chưa điền thông tin ngày tạo phiếu!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(tfTienPhat.getText().equals("")){
            new MyDialog("Bạn chưa điền thông tin tiền phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jcbbLyDoPP.getSelectedItem().equals("")){
            new MyDialog("Bạn chưa điền thông tin lý do phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(txtAreaXuLy.getText().equals("")){
            new MyDialog("Bạn chưa điền thông tin cách xử lý phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(!phieuPhatBUS.suaPhieuPhat(tfMaPP.getText(), jcbbMaThePP.getSelectedItem().toString(), datachooserNgayLap.getDate())) {
            System.out.println("Sửa phiếu phat không thành công");
            return;
        }
        System.out.println("Sửa phiểu phạt thành công");
        //
        boolean kt = chiTietPhieuPhatBUS.suaChiTietPhieuPhat(
            tfMaPP.getText(),
            jcbbMaSachPP.getSelectedItem().toString(),
            Integer.parseInt(tfTienPhat.getText()),
            jcbbLyDoPP.getSelectedItem().toString(),
            txtAreaXuLy.getText());
        if(!kt){
            new MyDialog("Sửa phiếu phạt thất bại !",MyDialog.ERROR_DIALOG);
            return;
        }

        new MyDialog("Sửa phiếu phạt thành công !",MyDialog.INFO_DIALOG);
        loadTablePhieuPhat();
    }//GEN-LAST:event_jbtnSuaPPActionPerformed

    private void jbtnXoaPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaPPActionPerformed
        // TODO add your handling code here:
        if(tfMaPP.isEditable()){
            new MyDialog("Bạn đang ở chế độ thêm thông tin!!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(tfMaPP.getText().equals("")){
            new MyDialog("Mã phiếu phạt không tồn tại để sửa !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jcbbMaSachPP.getSelectedItem().toString().equals("")){
            new MyDialog("Mã sách không tồn tại để xóa !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        MyDialog dlg = new MyDialog("Bạn có chắc chắn muốn xoá?", MyDialog.WARNING_DIALOG);
        if (dlg.OK_OPTION == dlg.getAction()) {
            boolean ktXoaCTPP = chiTietPhieuPhatBUS.xoaChiTietPhieuPhat(tfMaPP.getText(), jcbbMaSachPP.getSelectedItem().toString());
            if(!ktXoaCTPP) return;
            boolean ktXoaPP = phieuPhatBUS.xoaPhieuPhat(tfMaPP.getText());
            if(ktXoaPP){
                new MyDialog("Xóa phiếu phạt thành công !!!",MyDialog.WARNING_DIALOG);
                return;
            }
            new MyDialog("Xóa phiếu phạt thất bại !!!",MyDialog.WARNING_DIALOG);
        }
        loadTablePhieuPhat();
    }//GEN-LAST:event_jbtnXoaPPActionPerformed

    private void jcbbMaThePPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbbMaThePPItemStateChanged
        // TODO add your handling code here:
        if(tfMaPP.isEditable()){
            try{
                ArrayList<PhieuMuon> pmList = phieuMuonTraBUS.getPhieuMuonTheoMa(jcbbMaThePP.getSelectedItem().toString());
                jcbbMaSachPP.removeAllItems();
                for(PhieuMuon pm : pmList){
                    ArrayList<ChiTietPhieuMuon> getCTPMList = chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(pm.getMaPhieuMuon());
                    for(ChiTietPhieuMuon ctpm : getCTPMList){
                        if(ctpm.getTinhTrang().equals("Đã trả")){
                            jcbbMaSachPP.addItem(ctpm.getMaSach());
                        }
                    }
                }
            }catch(Exception e){
                System.out.println("Lỗi đưa dữ liệu vào combobox ");
            }
        }
    }//GEN-LAST:event_jcbbMaThePPItemStateChanged

    private void jbtnResetPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetPPActionPerformed
        // TODO add your handling code here:
        loadTablePhieuPhat();
        showComboboxMaTheMaSach();
        tfMaPP.setText("");
        tfTienPhat.setText("");
        datachooserNgayLap.setDate(null);
        txtAreaXuLy.setText("");
        jcbbMaSachPP.setSelectedIndex(0);
        tfMaPP.setEditable(true);
    }//GEN-LAST:event_jbtnResetPPActionPerformed

    private void jbtnTimKiemPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTimKiemPPActionPerformed
        // TODO add your handling code here:
        while(true){
            String input = JOptionPane.showInputDialog(this, "Bạn vui lòng nhập mã phiếu phạt cần tìm");
            if(input != null && input.length()>0){
                loadTablePhieuPhat(input);
                if(tableModelPhieuPhat.getRowCount()==0){
                    MyDialog dlg = new MyDialog("Không tìm được thông tin phiếu phạt theo yêu cầu, vui lòng nhập lại!!!",MyDialog.WARNING_DIALOG);
                    if(dlg.CANCEL_OPTION == dlg.getAction()){
                        break;
                    }
                }else{
                    new MyDialog("Tìm được "+tableModelPhieuPhat.getRowCount()+" kết quả của phiếu phạt mã "+input+" !!",MyDialog.INFO_DIALOG);
                    break;
                }
            }else {
                return;
            }
        }
    }//GEN-LAST:event_jbtnTimKiemPPActionPerformed

    private void jtabPhieuPhatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabPhieuPhatMouseClicked
        // TODO add your handling code here:
        int row = jtabPhieuPhat.getSelectedRow();
        tfMaPP.setText(jtabPhieuPhat.getValueAt(row, 1).toString());
        jcbbMaThePP.removeAllItems();
        jcbbMaThePP.addItem(jtabPhieuPhat.getValueAt(row, 2).toString());
        datachooserNgayLap.setDate(MyDateFormat.getDateToString(jtabPhieuPhat.getValueAt(row, 3).toString()));
        jcbbMaSachPP.removeAllItems();
        jcbbMaSachPP.addItem(jtabPhieuPhat.getValueAt(row, 4).toString());
        tfTienPhat.setText(jtabPhieuPhat.getValueAt(row, 5).toString());
        jcbbLyDoPP.removeAllItems();
        jcbbLyDoPP.addItem(jtabPhieuPhat.getValueAt(row, 6).toString());
        txtAreaXuLy.setText(jtabPhieuPhat.getValueAt(row, 7).toString());
        tfMaPP.setEditable(false);
        //        jcbbMaSachPP.setEnabled(false);
        //        jcbbMaThePP.setEnabled(false);
    }//GEN-LAST:event_jtabPhieuPhatMouseClicked

    private void jtbnThoatDialogEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbnThoatDialogEditActionPerformed
        // TODO add your handling code here:

        String str = "";
        if(jtfMaPhieuMuonEdit.isEditable() == false){
            ArrayList<ChiTietPhieuMuon> listPM = chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(jtfMaPhieuMuonEdit.getText());
            for(ChiTietPhieuMuon ctpm : listPM){
                if(ctpm.getTinhTrang().trim().equalsIgnoreCase("Chưa trả")){
                    str+=ctpm.getMaSach()+" ";
                }
            }
        }else{
            for(ChiTietPhieuMuon ctpm : listCTPMDialogEdit){
                str+=ctpm.getMaSach()+" ";
            }
        }

        jtfMaSachMuonEdit.setText(str);
        jtfMaSachTraEdit.setText(chiTietPhieuMuonTraBUS.getMaSach(jtfMaPhieuMuonEdit.getText(),false));
        tableModelMDialogEdit.setRowCount(0);
        xoaDuLieuDialog();
        jdialogDanhSachMuon.dispose();
    }//GEN-LAST:event_jtbnThoatDialogEditActionPerformed

    private void jbtnSuaDialogEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSuaDialogEditActionPerformed
        // TODO add your handling code here:

        if(jcbbTenSachDialogEdit.isEnabled()==true){
            new MyDialog("Bạn đang ở chế độ thêm thông tin, vui lòng click phiếu bạn muốn sửa !!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(jtfMaPhieuMuonEdit.getText().equals("")){
            new MyDialog("Vui lòng chọn sách muốn sửa thông tin !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        //
        if(jtfSoLuongDialogEdit.getText().equals("")){
            new MyDialog("Vui lòng không để trống số lượng !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtfTienCuocDialogEdit.getText().equals("")){
            new MyDialog("Vui lòng không đế trống tiền cược !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        //
        String[] maSach = jcbbTenSachDialogEdit.getSelectedItem().toString().split("\\s");
        //
        if(jtfMaPhieuMuonEdit.isEditable()==false){
            if(chiTietPhieuMuonTraBUS.suaChiTietPhieuMuon(
                jtfMaPhieuMuonEdit.getText(),
                maSach[0],
                Integer.parseInt(jtfSoLuongDialogEdit.getText()),
                Integer.parseInt(jtfTienCuocDialogEdit.getText()),
                jcbbTinhTrangDialogEdit.getSelectedItem().toString())){
            new MyDialog("Sửa thông tin thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Sửa thông tin thất bại !!!",MyDialog.ERROR_DIALOG);
        }
        loadTableDialogPhieuMuonEdit(chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(jtfMaPhieuMuonEdit.getText()));
        }else{
            for(ChiTietPhieuMuon ctpm : listCTPMDialogEdit){
                if(ctpm.getMaSach().equalsIgnoreCase(maSach[0])){
                    ctpm.setSoLuong(Integer.parseInt(jtfSoLuongDialogEdit.getText()));
                    ctpm.setTienCuoc(Integer.parseInt(jtfTienCuocDialogEdit.getText()));
                    ctpm.setTinhTrang(jcbbTinhTrangDialogEdit.getSelectedItem().toString());
                    new MyDialog("Sửa thông tin thành công !!!",MyDialog.INFO_DIALOG);
                    loadTabAddDialogPhieuMuonEdit();
                    return;
                }
            }
        }
    }//GEN-LAST:event_jbtnSuaDialogEditActionPerformed

    private void jtabDSDialogEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabDSDialogEditMouseClicked
        // TODO add your handling code here:
        ArrayList<String> lstTenSach = sachBUS.getListTenSach();
        int row = jtabDSDialogEdit.getSelectedRow();

        for(String s : lstTenSach){
            String[] str = s.split(" ");
            if(jtabDSDialogEdit.getValueAt(row, 0).equals(str[0])){
                jcbbTenSachDialogEdit.setSelectedItem(s);
            }
        }

        jcbbTenSachDialogEdit.setEnabled(false);

        jtfSoLuongDialogEdit.setText(jtabDSDialogEdit.getValueAt(row, 1).toString());
        jtfTienCuocDialogEdit.setText(jtabDSDialogEdit.getValueAt(row, 2).toString());
        jcbbTinhTrangDialogEdit.setSelectedItem(jtabDSDialogEdit.getValueAt(row, 3));
    }//GEN-LAST:event_jtabDSDialogEditMouseClicked

    private void jbtnThemDialogEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThemDialogEditActionPerformed
        // TODO add your handling code here:

        if(jcbbTenSachDialogEdit.isEnabled()==false){
            new MyDialog("Bạn đang ở chế độ sửa thông tin, vui lòng reset lại !!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(jcbbTenSachDialogEdit.getSelectedItem().equals("")){
            new MyDialog("Vui lòng chọn tên sách!!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtfSoLuongDialogEdit.getText().equals("")){
            new MyDialog("Vui lòng không để trống số lượng !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtfTienCuocDialogEdit.getText().equals("")){
            new MyDialog("Vui lòng không để trống tiền cược !!!",MyDialog.WARNING_DIALOG);
            return;
        }

        String[] maSach = jcbbTenSachDialogEdit.getSelectedItem().toString().split("\\s");
        //

        //
        if(jtfMaPhieuMuonEdit.isEditable()==false){
            if(chiTietPhieuMuonTraBUS.themChiTietPhieuMuon(
                jtfMaPhieuMuonEdit.getText(),
                maSach[0],
                Integer.parseInt(jtfSoLuongDialogEdit.getText()),
                Integer.parseInt(jtfTienCuocDialogEdit.getText()),
                jcbbTinhTrangDialogEdit.getSelectedItem().toString())){
            new MyDialog("Thêm thông tin phiếu mượn thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Thêm thông tin phiếu mượn thất bại !!!",MyDialog.INFO_DIALOG);
        }
        loadTableDialogPhieuMuonEdit(chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(jtfMaPhieuMuonEdit.getText()));
        }else{
            //KTRA trung ma khong
            for(ChiTietPhieuMuon ctp : listCTPMDialogEdit){
                if(ctp.getMaPhieuMuon().trim().equalsIgnoreCase(jtfMaPhieuMuonEdit.getText())
                    && ctp.getMaSach().trim().equalsIgnoreCase(maSach[0])){
                    new MyDialog("Mã sách đã tồn tại vui lòng chọn mã khác", MyDialog.ERROR_DIALOG);
                    return;
                }
            }
            //them vao list citietphieumuon
            ChiTietPhieuMuon ctpm = new ChiTietPhieuMuon();
            ctpm.setMaPhieuMuon(jtfMaPhieuMuonEdit.getText());
            ctpm.setMaSach(maSach[0]);
            ctpm.setSoLuong(Integer.parseInt(jtfSoLuongDialogEdit.getText()));
            ctpm.setTienCuoc(Integer.parseInt(jtfTienCuocDialogEdit.getText()));
            ctpm.setTinhTrang(jcbbTinhTrangDialogEdit.getSelectedItem().toString());

            listCTPMDialogEdit.add(ctpm);
            loadTabAddDialogPhieuMuonEdit();
        }
    }//GEN-LAST:event_jbtnThemDialogEditActionPerformed

    private void jbtnXoaTrangDialogEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaTrangDialogEditActionPerformed
        // TODO add your handling code here:
        xoaDuLieuDialog();
    }//GEN-LAST:event_jbtnXoaTrangDialogEditActionPerformed

    private void jbtnXoaDialogEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaDialogEditActionPerformed
        // TODO add your handling code here:
        if(jcbbTenSachDialogEdit.isEnabled()==true){
            new MyDialog("Bạn đang ở chế độ thêm thông tin, vui lòng click phiếu bạn muốn xóa !!!",MyDialog.WARNING_DIALOG);
            return;
        }

        if(jcbbTenSachDialogEdit.getSelectedItem().toString().equals("")){
            new MyDialog("Vui lòng chọn thông tin phiếu mượn cần xóa !!!",MyDialog.WARNING_DIALOG);
            return;
        }
        String[] maSach = jcbbTenSachDialogEdit.getSelectedItem().toString().split("\\s");
        if(jtfMaPhieuMuonEdit.isEditable()==false){
            if(chiTietPhieuMuonTraBUS.xoaChiTietPhieuMuon(
                jtfMaPhieuMuonEdit.getText(),
                maSach[0])){
            new MyDialog("Xóa thông tin thành công !!!",MyDialog.INFO_DIALOG);
        }else{
            new MyDialog("Xóa thông tin thất bại !!!",MyDialog.ERROR_DIALOG);
        }
        loadTableDialogPhieuMuonEdit(chiTietPhieuMuonTraBUS.getCTPMToMaPhieu(jtfMaPhieuMuonEdit.getText()));
        }else{
            for(ChiTietPhieuMuon ctpm : listCTPMDialogEdit){
                if(ctpm.getMaSach().trim().equalsIgnoreCase(maSach[0])){
                    if(listCTPMDialogEdit.remove(ctpm)){
                        new MyDialog("Xóa thông tin thành công !!!",MyDialog.INFO_DIALOG);
                        loadTabAddDialogPhieuMuonEdit();
                        return;
                    }
                }
            }
            new MyDialog("Xóa thông tin thất bại !!!",MyDialog.ERROR_DIALOG);
        }
    }//GEN-LAST:event_jbtnXoaDialogEditActionPerformed

    private void jbtnThoatPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThoatPPActionPerformed
        // TODO add your handling code here:
        jdialogPhieuPhat.setVisible(false);
        jtfMaDocGiaPPDialog.setText("");
        jtfSoLuongDialogEdit.setText("");
        jtfTienCuocDialogEdit.setText("");
        jtfTienPhatPPDialog.setText("");
        jtxtAreaXuLyPPDialog.setText("");
        jtxtareaLiDoPPDialog.setText("");
        tableModelMDialogEdit.setRowCount(0);
        //        jcbbMaSachPP.setEnabled(true);
        //        jcbbMaThePP.setEnabled(true);
    }//GEN-LAST:event_jbtnThoatPPActionPerformed

    private void jbtnTaoPhieuPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTaoPhieuPPActionPerformed
        // TODO add your handling code here:
        if(jtfMaPPDialog.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin mã phiếu phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jdataChooserPP.getDate()==null){
            new MyDialog("Bạn chưa thêm thông tin ngày tạo phiếu!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtfTienPhatPPDialog.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin mã phiếu phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtxtareaLiDoPPDialog.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin lí do phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }
        if(jtxtAreaXuLyPPDialog.getText().equals("")){
            new MyDialog("Bạn chưa thêm thông tin cách xử lí phạt!!",MyDialog.WARNING_DIALOG);
            return;
        }

        ArrayList<String> maSach = new ArrayList<>();
        for(int i = 0; i< jtabMaSachPP.getRowCount();i++){
            if(jtabMaSachPP.getValueAt(i,1).toString().equals("true")){
                String[] ms = jtabMaSachPP.getValueAt(i,0).toString().split("\\s");
                maSach.add(ms[0]);
            }
        }
        //
        String[] maDG = jtfMaDocGiaPPDialog.getText().split("\\s");
        System.out.println(""+maDG[0]);
        if(phieuPhatBUS.themPhieuPhat(jtfMaPPDialog.getText(), maDG[0], jdataChooserPP.getDate())==false) {
            System.out.println("Them phieu phat loi");
            return;
        }
        System.out.println("Them phieu phat thanh cong");
        //
        for(String str : maSach){
            boolean kt = chiTietPhieuPhatBUS.themChiTietPhieuPhat(
                jtfMaPPDialog.getText(),
                str,
                Integer.parseInt(jtfTienPhatPPDialog.getText()),
                jtxtareaLiDoPPDialog.getText(),
                jtxtAreaXuLyPPDialog.getText());
            System.out.println("Them phieu phat cua ma sach : "+str);
            if(!kt){
                new MyDialog("Thêm phiếu phạt thất bại !",MyDialog.ERROR_DIALOG);
                return;
            }
        }
        new MyDialog("Thêm phiếu phạt thành công !",MyDialog.INFO_DIALOG);
    }//GEN-LAST:event_jbtnTaoPhieuPPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListSachEdit;
    private com.toedter.calendar.JDateChooser datachooserNgayLap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnResetPP;
    private javax.swing.JButton jbtnResetVaLoadEdit;
    private javax.swing.JButton jbtnSuaDialogEdit;
    private javax.swing.JButton jbtnSuaPMEdit;
    private javax.swing.JButton jbtnSuaPP;
    private javax.swing.JButton jbtnTaoPPEdit;
    private javax.swing.JButton jbtnTaoPhieuPP;
    private javax.swing.JButton jbtnThemDialogEdit;
    private javax.swing.JButton jbtnThemPMEdit;
    private javax.swing.JButton jbtnThemPP;
    private javax.swing.JButton jbtnThoatPP;
    private javax.swing.JButton jbtnTimKiem;
    private javax.swing.JButton jbtnTimKiemPP;
    private javax.swing.JButton jbtnXoaDialogEdit;
    private javax.swing.JButton jbtnXoaPMEdit;
    private javax.swing.JButton jbtnXoaPP;
    private javax.swing.JButton jbtnXoaTrangDialogEdit;
    private javax.swing.JButton jbtnXuatFile;
    private javax.swing.JComboBox<String> jcbbLyDoPP;
    private javax.swing.JComboBox<String> jcbbMaSachPP;
    private javax.swing.JComboBox<String> jcbbMaThePMEdit;
    private javax.swing.JComboBox<String> jcbbMaThePP;
    private javax.swing.JComboBox<String> jcbbSapXepTK;
    private javax.swing.JComboBox<String> jcbbTenSachDialogEdit;
    private javax.swing.JComboBox<String> jcbbTimKiemT;
    private javax.swing.JComboBox<String> jcbbTinhTrangDialogEdit;
    private com.toedter.calendar.JDateChooser jdataChooserPP;
    private com.toedter.calendar.JDateChooser jdcHanTraEdit;
    private com.toedter.calendar.JDateChooser jdcNgayMuonEdit;
    private javax.swing.JDialog jdialogDanhSachMuon;
    private javax.swing.JDialog jdialogPhieuPhat;
    private javax.swing.JLabel jlblDSSMEdit;
    private javax.swing.JPanel jpnlDGMuonTK;
    private javax.swing.JPanel jpnlTK;
    private javax.swing.JTable jtabDSDialogEdit;
    private javax.swing.JTable jtabMaSachPP;
    private javax.swing.JTable jtabPhieuMuonEdit;
    private javax.swing.JTable jtabPhieuPhat;
    private javax.swing.JTextArea jtareaSachMuonTK;
    private javax.swing.JTable jtbPhieuTK;
    private javax.swing.JButton jtbnThoatDialogEdit;
    private javax.swing.JTextField jtfMaDocGiaPPDialog;
    private javax.swing.JTextField jtfMaPPDialog;
    private javax.swing.JTextField jtfMaPhieuMuonEdit;
    private javax.swing.JTextField jtfMaSachMuonEdit;
    private javax.swing.JTextField jtfMaSachTraEdit;
    private javax.swing.JTextField jtfSoLuongDialogEdit;
    private javax.swing.JTextField jtfSoLuongTK;
    private javax.swing.JTextField jtfSoTienCuocTK;
    private javax.swing.JTextField jtfTienCuocDialogEdit;
    private javax.swing.JTextField jtfTienPhatPPDialog;
    private javax.swing.JTextField jtfTimKiemTK;
    private javax.swing.JTextArea jtxtAreaXuLyPPDialog;
    private javax.swing.JTextArea jtxtareaLiDoPPDialog;
    private javax.swing.JPanel lpnlSapXepTK;
    private javax.swing.JButton reserDuLieuTK;
    private javax.swing.JTextField tfMaPP;
    private javax.swing.JTextField tfTienPhat;
    private javax.swing.JTextArea txtAreaXuLy;
    // End of variables declaration//GEN-END:variables
    private void showColumnPhieuMTTK(){
        tableModelMuonTraTK.setColumnCount(0);
        tableModelMuonTraTK.addColumn("STT");
        tableModelMuonTraTK.addColumn("Mã phiếu mượn");
        tableModelMuonTraTK.addColumn("Họ và tên độc giả");
        tableModelMuonTraTK.addColumn("Tên sách");
        tableModelMuonTraTK.addColumn("Ngày mượn");
        tableModelMuonTraTK.addColumn("Hạn trả");
        tableModelMuonTraTK.addColumn("Số lượng");
        tableModelMuonTraTK.addColumn("Tiền cược");
        tableModelMuonTraTK.addColumn("Tình trạng");
        chinhColumn(jtbPhieuTK);
    }
    
    private void loadTablePhieuMuonTraTK(ArrayList<String> a) {
       tableModelMuonTraTK.setRowCount(0); 
        listTabPhieuMTTK = a ;
        for(String pmt : listTabPhieuMTTK){
            String[] list = pmt.split("_");
            String tinhtrang ;
            String tt = list[7];
            if(tt.equals("1")){
                tinhtrang = "Đã trả";
            }else{
                tinhtrang = "Chưa trả";
            }
            tableModelMuonTraTK.addRow(new Object[]{
                tableModelMuonTraTK.getRowCount()+1,
                list[0],list[1],list[2],list[3],list[4],list[5],list[6],tinhtrang
            });
        }
    }

    private void showColumnPhieuMEdit() {
        tableModelMuonEdit.addColumn("STT");
        tableModelMuonEdit.addColumn("Mã phiếu");
        tableModelMuonEdit.addColumn("Mã thẻ");
        tableModelMuonEdit.addColumn("Ngày mượn");
        tableModelMuonEdit.addColumn("Hạn trả");
        chinhColumn(jtabPhieuMuonEdit);
    }
    
    private void showComboboxTenSachEdit(){
        ArrayList<String> lstTenSach = sachBUS.getListTenSach();
        for(String s : lstTenSach){
            jcbbTenSachDialogEdit.addItem(s);
        }
    }
    
    private void loadTableDialogPhieuMuonEdit(ArrayList<ChiTietPhieuMuon> listCTPM){
        tableModelMDialogEdit.setRowCount(0);
        //danh sash cac CTPM cung maphieu nhung khac masach
        for(ChiTietPhieuMuon ctpm : listCTPM){
            tableModelMDialogEdit.addRow(new Object[]{
                ctpm.getMaSach(),
                ctpm.getSoLuong(),
                ctpm.getTienCuoc(),
                ctpm.getTinhTrang()
            });
        }
    }
    
    private void loadTabAddDialogPhieuMuonEdit(){
        tableModelMDialogEdit.setRowCount(0);
        //danh sash cac CTPM cung maphieu nhung khac masach
        for(ChiTietPhieuMuon ctpm : listCTPMDialogEdit){
            tableModelMDialogEdit.addRow(new Object[]{
                ctpm.getMaSach(),
                ctpm.getSoLuong(),
                ctpm.getTienCuoc(),
                ctpm.getTinhTrang()
            });
        }
    }
    
    private void xoaDuLieuDialog(){
        jcbbTenSachDialogEdit.setEnabled(true);
        jtfSoLuongDialogEdit.setText("");
        jtfTienCuocDialogEdit.setText("");
        jcbbTenSachDialogEdit.setSelectedIndex(0);
        jcbbTinhTrangDialogEdit.setSelectedIndex(0);
    }
    

//---------------Phieu muon-------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------------------
    
    private void loadTablePhieuMuonEdit(ArrayList<PhieuMuon> listPM) {
        tableModelMuonEdit.setRowCount(0);
        listTabPMuonEdit = listPM;
        for(PhieuMuon pm : listTabPMuonEdit){
            tableModelMuonEdit.addRow(new Object[]{
                tableModelMuonEdit.getRowCount()+1,
                pm.getMaPhieuMuon(),
                pm.getMaThe(),
                MyDateFormat.getStringToDate(pm.getNgayMuon()),
                MyDateFormat.getStringToDate(pm.getHanTra())
            });
        }     
    }
    
    private void showComboBoxDocGiaEdit(){
        jcbbMaThePMEdit.removeAllItems();
        
        ArrayList<DocGia> listdg = new ArrayList<>();
        listdg = docGiaBUS.getDanhSachDocGia();
         jcbbMaThePMEdit.addItem("");
        for(DocGia dg : listdg){
            jcbbMaThePMEdit.addItem(dg.getMaThe()+" "+dg.getHoTen());
            
        }
    }
    
//----------------------------------------------------------------------
//-------                       Phiếu Phạt
//--------------------------------------------------------------------------------
    private void showColumnPhieuPhat(){
        tableModelPhieuPhat.setColumnCount(0);
        tableModelPhieuPhat.addColumn("STT");
        tableModelPhieuPhat.addColumn("Mã phiếu phạt");
        tableModelPhieuPhat.addColumn("Mã thẻ");
        tableModelPhieuPhat.addColumn("Ngày lập");
        tableModelPhieuPhat.addColumn("Mã sách");
        tableModelPhieuPhat.addColumn("Tiền phạt");
        tableModelPhieuPhat.addColumn("Lý do");
        tableModelPhieuPhat.addColumn("Xử lý");
        chinhColumn(jtabPhieuPhat);
        
    }
    
    private void loadTablePhieuPhat() {
        tableModelPhieuPhat.setRowCount(0);
        ArrayList<PhieuPhat> lPP = phieuPhatBUS.getListPhieuPhat();
        ArrayList<ChiTietPhieuPhat> lCTPP = chiTietPhieuPhatBUS.getListChiTietPP();
        for(PhieuPhat pp : lPP){
            for(ChiTietPhieuPhat ctpp : lCTPP){
                if(pp.getMaPhieuPhat().equalsIgnoreCase(ctpp.getMaPhieuPhat())){
                    tableModelPhieuPhat.addRow(new Object[]{
                        tableModelPhieuPhat.getRowCount()+1,
                        pp.getMaPhieuPhat(),
                        pp.getMaThe(),
                        MyDateFormat.getStringToDate(pp.getNgayLap()),
                        ctpp.getMaSach(),
                        ctpp.getTienPhat(),
                        ctpp.getLyDo(),
                        ctpp.getXuLy()
                    });
                }
            }
        }
    }
    
    private void loadTablePhieuPhat(String maPhieuPhat) {
        tableModelPhieuPhat.setRowCount(0);
        ArrayList<PhieuPhat> lPP = phieuPhatBUS.getListPhieuPhat();
        ArrayList<ChiTietPhieuPhat> lCTPP = chiTietPhieuPhatBUS.getListChiTietPP();
        for(PhieuPhat pp : lPP){
            for(ChiTietPhieuPhat ctpp : lCTPP){
                if(pp.getMaPhieuPhat().equalsIgnoreCase(maPhieuPhat) && ctpp.getMaPhieuPhat().equalsIgnoreCase(maPhieuPhat)){
                    tableModelPhieuPhat.addRow(new Object[]{
                        tableModelPhieuPhat.getRowCount()+1,
                        pp.getMaPhieuPhat(),
                        pp.getMaThe(),
                        MyDateFormat.getStringToDate(pp.getNgayLap()),
                        ctpp.getMaSach(),
                        ctpp.getTienPhat(),
                        ctpp.getLyDo(),
                        ctpp.getXuLy()
                    });
                }
            }
        }
    }
    
    private boolean ktrPhieuPhatTonTai(String maThe, String maSach){
        ArrayList<PhieuPhat> lPP = phieuPhatBUS.getListPhieuPhat();
        ArrayList<ChiTietPhieuPhat> lCTPP = chiTietPhieuPhatBUS.getListChiTietPP();
        for(PhieuPhat pp : lPP){
            for(ChiTietPhieuPhat ctpp : lCTPP){
                if(pp.getMaPhieuPhat().equalsIgnoreCase(ctpp.getMaPhieuPhat())){
                    if(ctpp.getMaSach().trim().equalsIgnoreCase(maSach) && pp.getMaThe().trim().equalsIgnoreCase(maThe))
                        return true;
                }
                
            }
        }
        return false;
    }
    
    private void chinhColumn(JTable jtab){
         JTableHeader header = jtab.getTableHeader();
        
        Font font = new Font("Arial", Font.BOLD, 40);
//        headerRenderer.setFont(font);
        header.setBackground(new Color(242, 153, 74));
        header.setFont(new Font("Arial", Font.BOLD, 24));
        header.setOpaque(false);
        header.setForeground(Color.BLACK);
        header.setReorderingAllowed(false);
        
        ((DefaultTableCellRenderer) header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        
//        int columnWidth = {10, 150, 80};
    }
    
    private void showComboboxMaTheMaSach(){
        jcbbMaThePP.removeAllItems();
        ArrayList<String> phieuMuonList = phieuMuonTraBUS.getMaTheMuon();
        jcbbMaThePP.addItem("");
        for(String s : phieuMuonList){
            jcbbMaThePP.addItem(s);
        }
        //
        jcbbMaSachPP.removeAllItems();
        ArrayList<String> ctpmList = chiTietPhieuMuonTraBUS.getMaSachDaTra();
        jcbbMaSachPP.addItem("");
        for(String maS : ctpmList){
            jcbbMaSachPP.addItem(maS);
        }
        
        jcbbLyDoPP.removeAllItems();
        jcbbLyDoPP.addItem("");
        jcbbLyDoPP.addItem("Mất sách");
        jcbbLyDoPP.addItem("Hỏng sách");
        jcbbLyDoPP.addItem("Trả muộn");
    }
}
